Java에서 문자열의 특정 인덱스에 있는 문자 바꾸기


문자열은 Java에서 변경할 수 없는 클래스여서 어떤 연산에 의해 원본 문자열이 바뀌지 않는다.

원본은 그대로 유지되고, 바뀐 문자열이 새로 생성이 되어서 반환된다.

그래서 항상 바뀐 문자열을 반환값으로 받아야 한다.

1. replace() 사용

``` JAVA ```

String tmp = str[0];
        for (int i = 1; i < T; i++)
            for (int j = 0; j < str[0].length(); j++)
                if (str[0].charAt(j) != str[i].charAt(j))
                    tmp = tmp.replace(tmp.charAt(j), '?');
              
``````


특정 값을 바꾸기 위해서는 바꿀 문자로 새 String 개체를 만들면 된다.

1. substring() 사용

String.substring(int, int) 문자열을 교체할 문자 앞과 뒤의 부분 문자열로 구성된 두 개의 절반으로 분할하는 방법이다.

2. StringBuilder 사용

권장되는 솔루션은 가변 클래스를 사용하는 것이다.

StringBuilder Java에서 문자열의 특정 인덱스에 있는 문자를 효율적으로 교체한다.

3. toCharArray() 사용

문자열의 지정된 인덱스에서 문자를 대체하는 또 다른 방법은 쉽게 수정할 수 있는 문자 어레이을 사용하는 것이다.

주어진 문자열을 다음을 사용하여 문자 어레이로 변환한 뒤 (toCharArray()) 문자 어레이의 지정된 인덱스에 있는 문자를 바꾼다.

마지막으로 String.valueOf(char[])을 사용하여 문자 어레이을 다시 문자열로 변환한다.

